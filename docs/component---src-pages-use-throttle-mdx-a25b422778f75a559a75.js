(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{c4oS:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n("Fcif"),o=n("+I+c"),r=(n("mXGw"),n("/FXl")),c=n("BIGe"),s=(n("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/use-throttle.mdx"}});var l={_frontmatter:s},i=c.a;function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(i,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"use-throttle"},"Use Throttle"),Object(r.b)("p",null,"Create a throttled version of a specific value or a function."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @corets/use-throttle\n")),Object(r.b)("h2",{id:"usethrottle"},Object(r.b)("inlineCode",{parentName:"h2"},"useThrottle")),Object(r.b)("p",null,"This hook is built on top of lodash's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://lodash.com/docs/4.17.15#throttle"}),Object(r.b)("inlineCode",{parentName:"a"},"throttle()"))," and accepts the same arguments."),Object(r.b)("p",null,"In this example we are creating a throttled version of an existing value:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useState, useEffect } from "react"\nimport { useThrottle } from "@corets/use-throttle"\n\nconst Example = () => {\n  const [input, setInput] = useState("")\n  const throttledInput = useThrottle(input, 300)\n\n  const handleSearch = () => {\n    // fetch some data based on input...\n  }\n\n  const handleChange = (e) => setInput(e.target.value)\n\n  // react to changes of the debounced input\n  useEffect(handleSearch, [throttledInput])\n\n  return (\n    <input type="text" onChange={handleChange} />\n  )\n}\n')),Object(r.b)("p",null,"In this example we are creating a throttled version of a function:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useState, useEffect } from "react"\nimport { useThrottle } from "@corets/use-throttle"\n\nconst Example = () => {\n  const [input, setInput] = useState("")\n  const handleSearch = useThrottle((query: string) => {\n    // you can also access variable "input" directly, if you want to\n    // fetch some data based on input...\n  }, 300)\n\n  const handleChange = (e) => {\n    setInput(e.target.value)\n    // trigger search immediately, this call will be throttled\n    handleSearch(e.target.value)\n  }\n\n\n  return (\n    <input type="text" onChange={handleChange} />\n  )\n}\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," This hook accepts a third ",Object(r.b)("inlineCode",{parentName:"p"},"options")," argument identical to the one expected by lodash's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://lodash.com/docs/4.17.15#throttle"}),Object(r.b)("inlineCode",{parentName:"a"},"throttle()"))," function."))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/use-throttle.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-use-throttle-mdx-a25b422778f75a559a75.js.map