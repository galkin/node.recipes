(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{rCvV:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return l})),n.d(a,"default",(function(){return b}));var t=n("Fcif"),i=n("+I+c"),s=(n("mXGw"),n("/FXl")),r=n("TjRS"),o=n("SxAF"),l=(n("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/pagination-helpers.mdx"}});var p={_frontmatter:l},c=r.a;function b(e){var a=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)(c,Object(t.a)({},p,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)(o.a,{repository:"pagination-helpers",mdxType:"Header"}),Object(s.b)("h1",{id:"pagination-helpers"},"Pagination Helpers"),Object(s.b)("p",null,"Various helpers related to pagination specific functionality."),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @corets/pagination-helpers\n")),Object(s.b)("h2",{id:"createpagination"},Object(s.b)("inlineCode",{parentName:"h2"},"createPagination")),Object(s.b)("p",null,"Calculates total amount of pages, visible pages, more / less indicators, total items, etc."),Object(s.b)("p",null,"This helper can be used to build a pagination like these:"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{}),"< << ... 6 7 8 [9] 10 11 12 ... >> >\n< << 7 8 [9] 10 11 >> >\n<  ... 7 8 [9] 10 11  ... >\n< [9] >\n[ v Select page ]\n")),Object(s.b)("p",null,"Calculate pagination:"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ts"}),'import { createPagination } from "@corets/pagination-helpers"\n\n// active page\nconst currentPage = 7\n// total number of items for pagination\nconst totalItems = 1337\n// how many items are visible on a single page\nconst pageSize = 20\n// how many pages you want to display to the left and right of the current page\nconst surroundBy = 2\n\nconst pagination = createPagination({ currentPage, totalItems, pageSize, surroundBy })\n')),Object(s.b)("p",null,"With the calculated result below you can build almost every possible kind of pagination you can think of:"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ts"}),"{\n  // active page\n  currentPage: 7,\n  // number of the first page, obviously...\n  firstPage: 1,\n  // number of the last page\n  lastPage: 67,\n  // first visible page based on the surroundBy\n  firstVisiblePage: 5,\n  // last visible page based on the surroundBy\n  lastVisiblePage: 9,\n  // all visible pages based on the surroundBy\n  visiblePages: [ 5, 6, 7, 8, 9 ],\n  // all available pages, useful for a dropdown\n  allPages: [\n     1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n    13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n    25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\n    49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n    61, 62, 63, 64, 65, 66, 67\n  ],\n  // are there any previous pages?\n  hasPrevious: true,\n  // are there any next pages?\n  hasNext: true,\n  // are there any pages in between the first page and the first visible page?\n  hasLess: true,\n  // are there any pages in between the last page and the last visible page?\n  hasMore: true,\n  // how many items to skip, useful for an api call\n  itemsOffset: 120,\n  // how many items are visible per page\n  pageSize: 20,\n  // is current page the first one?\n  isFirstPage: false,\n  // is current page the last one?\n  isLastPage: false\n}\n")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/pagination-helpers.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-pagination-helpers-mdx-4aa1ab3e3686005f9eb6.js.map