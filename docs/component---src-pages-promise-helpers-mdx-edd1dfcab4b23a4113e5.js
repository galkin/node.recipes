(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"2J9X":function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return i})),r.d(t,"default",(function(){return m}));var n=r("Fcif"),o=r("+I+c"),a=(r("mXGw"),r("/FXl")),s=r("BIGe"),i=(r("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/promise-helpers.mdx"}});var c={_frontmatter:i},p=s.a;function m(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)(p,Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"promise-helpers"},"Promise Helpers"),Object(a.b)("p",null,"Various helpers related to promise specific functionality."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @corets/promise-helpers\n")),Object(a.b)("h2",{id:"createtimeout"},Object(a.b)("inlineCode",{parentName:"h2"},"createTimeout")),Object(a.b)("p",null,"A promisified version of the ",Object(a.b)("inlineCode",{parentName:"p"},"setTimeout")," function:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'import { createTimeout } from "@corets/promise-helpers"\n\nawait createTimeout(2000)\n')),Object(a.b)("h2",{id:"createpromise"},Object(a.b)("inlineCode",{parentName:"h2"},"createPromise")),Object(a.b)("p",null,"Create a promise that you can pass around without specifying the resolve function upfront:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'import { createPromise } from "@corets/promise-helpers"\n\nconst runWhenResolved = async (promise: Promise<any>) => {\n  try {\n    const result =  await promise\n\n    console.log("promise resolved with:", result)\n  } catch (err) {\n    console.error("an error was thrown from promise:", err)\n  }\n}\n\nconst promise = createPromise()\n\n// pass promise to another function\nrunWhenResolved(promise)\n\npromise.resolve("some data")\n// or\npromise.reject("reason...")\n')))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/promise-helpers.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-promise-helpers-mdx-edd1dfcab4b23a4113e5.js.map