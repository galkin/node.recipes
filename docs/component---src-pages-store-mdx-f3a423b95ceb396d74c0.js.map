{"version":3,"sources":["webpack:///../src/pages/store.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,qMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,kIAAiH,6BAAGC,WAAW,KAAQ,CACnI,KAAQ,WADqG,iBAAjH,QAEmC,6BAAGA,WAAW,KAAQ,CACrD,KAAQ,UADuB,gBAFnC,KAKA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6BAIL,iBAAQ,CACN,GAAM,SADR,SAGA,2FAA0E,6BAAGA,WAAW,KAAQ,CAC5F,KAAQ,eAD8D,qBAA1E,KAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,0GAAyF,6BAAGA,WAAW,KAAQ,CAC3G,KAAQ,yBAD6E,gCAGzF,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,kDAAiC,0BAAYA,WAAW,KAAvB,SAAjC,KACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iGAML,4EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yFAML,oEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0JAOL,iBAAQ,CACN,GAAM,YACL,0BAAYA,WAAW,MAAvB,cACH,mDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kBAIL,iBAAQ,CACN,GAAM,YACL,0BAAYA,WAAW,MAAvB,cACH,gDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gCAIL,iBAAQ,CACN,GAAM,YACL,0BAAYA,WAAW,MAAvB,cACH,6EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kCAIL,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,iBACH,+CACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kDAIL,qDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6GAML,2EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uI,mMAUTJ,EAAWK,gBAAiB","file":"component---src-pages-store-mdx-f3a423b95ceb396d74c0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkt/Development/corets/corets/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"store\"\n    }}>{`Store`}</h1>\n    <p>{`Simple observable store that can also be used inside React using Hooks. This observable is accompanied by `}<a parentName=\"p\" {...{\n        \"href\": \"/value\"\n      }}>{`@corets/value`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/list\"\n      }}>{`@corets/list`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @corets/store\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h2>\n    <p>{`You can use stores inside React using this hooks based integration `}<a parentName=\"p\" {...{\n        \"href\": \"/use-store\"\n      }}>{`@corets/use-store`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"localstorage\"\n    }}>{`LocalStorage`}</h2>\n    <p>{`There is also a version of this library that syncs its state to the localStorage: `}<a parentName=\"p\" {...{\n        \"href\": \"/local-storage-store\"\n      }}>{`@corets/local-storage-store`}</a></p>\n    <h2 {...{\n      \"id\": \"createstore\"\n    }}><inlineCode parentName=\"h2\">{`createStore`}</inlineCode></h2>\n    <p>{`Creates a new instance of `}<inlineCode parentName=\"p\">{`Store`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createStore } from \"@corets/store\"\n\nconst store = createStore({ some: \"data\" })\n`}</code></pre>\n    <p>{`Create a new instance without the factory function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { Store } from \"@corets/store\"\n\nconst store = new Store({ some: \"data\" })\n`}</code></pre>\n    <p>{`Create a new instance with a custom differ:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createStore } from \"@corets/store\"\n\nconst differ = (oldValue, newValue) => true\nconst store = createStore({ some: \"data\" }, { differ })\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"storeget\"\n    }}><inlineCode parentName=\"h2\">{`Store.get`}</inlineCode></h2>\n    <p>{`Retrieve value from store:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`store.get()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"storeset\"\n    }}><inlineCode parentName=\"h2\">{`Store.set`}</inlineCode></h2>\n    <p>{`Replace value in store:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`store.set({ foo: \"bar\" })\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"storeput\"\n    }}><inlineCode parentName=\"h2\">{`Store.put`}</inlineCode></h2>\n    <p>{`Add some values without replacing the initial state:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`store.put({ some: \"data\" })\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"storelisten\"\n    }}><inlineCode parentName=\"h2\">{`Store.listen`}</inlineCode></h2>\n    <p>{`Listen to any changes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`store.listen((value) => console.log(value))\n`}</code></pre>\n    <p>{`Listen with a custom differ:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const differ = (oldValue, newValue) => true\n\nstore.listen((value) => console.log(value), { differ })\n`}</code></pre>\n    <p>{`Listen to a subset of data, using a custom mapper:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const mapper = {value} => ({ /* re-map parts of the store */ })\n\nstore.listen((value) => console.log(value), { mapper })\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}