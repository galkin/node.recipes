{"version":3,"sources":["webpack:///../src/pages/use-idle.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,wMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAGA,sDACA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,gCAIL,iBAAQ,CACN,GAAM,WACL,0BAAYA,WAAW,MAAvB,YACH,4EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,ksB,sMAgCTJ,EAAWK,gBAAiB","file":"component---src-pages-use-idle-mdx-7d3e2d4ab85f62f26adc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkt/Development/corets/corets/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"use-idle\"\n    }}>{`Use Idle`}</h1>\n    <p>{`Detect when a user goes idle.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @corets/use-idle\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useidle\"\n    }}><inlineCode parentName=\"h2\">{`useIdle`}</inlineCode></h2>\n    <p>{`Detect when the user has been inactive for a while:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React, { useEffect } from \"react\"\nimport { useIdle } from \"@corets/use-idle\"\n\nconst Example = () => {\n  const isIdle = useIdle({\n    // check every 10s\n    interval: 10 * 1000,\n    // regard user as idle after 30min\n    threshold: 30 * 60 * 1000,\n    // specify events that should reset the idle status (default: [\"mousemove\", \"mouseup\", \"keyup\", \"focus\", \"resize\"])\n    events: [\"mousemove\"],\n    // local storage key for the last activity timestamp (default: last-activity)\n    storageKey: \"custom-storage-key\"\n  })\n\n  useEffect(() => {\n    if (isIdle) {\n      // do something, for example: logout()\n    }\n  }, [isIdle])\n\n  return (\n    <div>My App</div>\n  )\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}