{"version":3,"sources":["webpack:///../src/pages/local-storage-store.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,mNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,4CAA2B,6BAAGC,WAAW,KAAQ,CAC7C,KAAQ,WADe,iBAA3B,6CAEwE,0BAAYA,WAAW,KAAvB,gBAFxE,6EAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2CAIL,iBAAQ,CACN,GAAM,SADR,SAGA,+DACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+dAkBL,iBAAQ,CACN,GAAM,2BACL,0BAAYA,WAAW,MAAvB,4BACH,4CACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2J,iNAUTJ,EAAWK,gBAAiB","file":"component---src-pages-local-storage-store-mdx-6861ed1f2d88e96b50ba.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mkt/Development/corets/corets/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"local-storage-store\"\n    }}>{`Local Storage Store`}</h1>\n    <p>{`Built on top of the `}<a parentName=\"p\" {...{\n        \"href\": \"/store\"\n      }}>{`@corets/store`}</a>{` package and provides an integration with `}<inlineCode parentName=\"p\">{`localStorage`}</inlineCode>{`. Can be used as a drop in replacement for stores from the other package.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @corets/local-storage-store\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"react\"\n    }}>{`React`}</h2>\n    <p>{`Example of how to use stores in React:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from \"react\"\nimport { createLocalStorageStore } from \"@corets/local-storage-store\"\nimport { useStore } from \"@corets/use-store\"\n\nconst Example = () => {\n  const counterStore = useStore(() => createLocalStorageStore(\"storageKey\", { counter: 0 }))\n\n  const increment = () => counterStore.set({ counter: counterStore.get().counter + 1 })\n\n  return (\n    <div>\n      <button onClick={increment}>{counterStore.get().counter}</button>\n    </div>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"createlocalstoragestore\"\n    }}><inlineCode parentName=\"h2\">{`createLocalStorageStore`}</inlineCode></h2>\n    <p>{`Create a new store:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { createLocalStorageStore } from \"@corets/local-storage-store\"\n\nconst store = createLocalStorageStore(\"storageKey\", { some: \"data\" })\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}