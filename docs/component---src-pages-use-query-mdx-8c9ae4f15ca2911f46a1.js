(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{a8ii:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n("Fcif"),a=n("+I+c"),o=(n("mXGw"),n("/FXl")),u=n("TjRS"),c=n("SxAF"),s=(n("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/use-query.mdx"}});var i={_frontmatter:s},b=u.a;function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(b,Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(c.a,{repository:"use-query",mdxType:"Header"}),Object(o.b)("h1",{id:"use-query"},"Use Query"),Object(o.b)("p",null,"Convenient hooks for url query segments, built for ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://reactrouter.com/web/guides/quick-start"}),Object(o.b)("inlineCode",{parentName:"a"},"react-router")),". Working with queries is now as easy as using ",Object(o.b)("inlineCode",{parentName:"p"},"useState"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @corets/use-query\n")),Object(o.b)("h2",{id:"usequery"},Object(o.b)("inlineCode",{parentName:"h2"},"useQuery")),Object(o.b)("p",null,"Hook into any query param you want, right inside your React component:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),'import React from "react"\nimport { useQuery } from "@corets/use-query"\n\nconst Example = () => {\n  const [query, setQuery] = useQuery({\n    page: 1,\n    order: "asc"\n  })\n\n  const handleGoToNextPage = () => setQuery({ page: query.page + 1 })\n  const handleToggleSort = () => setQuery({ order: query.order === "asc" ? "desc" : "asc" })\n\n  return (\n    <div>\n      <div>Page: {query.page}</div>\n      <div>Order: {query.order}</div>\n      <button onClick={handleGoToNextPage}>Go to next page</button>\n      <button onClick={handleToggleSort}>Change sorting order</button>\n    </div>\n  )\n}\n')))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/use-query.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-use-query-mdx-8c9ae4f15ca2911f46a1.js.map